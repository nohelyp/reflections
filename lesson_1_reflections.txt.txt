How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    
Viewing a diff between two versions of a file help you see the bug because it shows you all the differences and we just have to analyze them to determine the differences.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    
Having easy access to the entire history of a file allows you to make comparisons just in case a mistake was made.



What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    
Pros: Manually choosing allows you the control to save at logical points. Automatically saving means that it can save it at points that aren't logical. Cons: You have to make sure that you actually save your work and that you don't forget.



Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    
Some version control systems allow saving multiple files in one comit because usually the files are connected and dependant upon on another. In Google Docs, the files are usually separate and are not dependant upon another file.



How can you use the commands git log and git diff to view the history of files?

    
Using git log, you have access to all the changes that were made with the author, user id, and a note of that specific change. Git diff allows you to make comparisons with the id attained from git log and then you can see the difference in them.



How might using version control make you more confident to make changes that
could break something?

    
Using version control allows me to track exactly the changes I made at different intervals.



Now that you have your workspace set up, what do you want to try using Git for?

    
I want to use git for keeping up with the changes that I make.